@startuml

class ClusterService{
    ---
    // 三种优先级的集群状态更改
    -Collection<ClusterStateApplier> highPriorityStateAppliers
    -Collection<ClusterStateApplier> normalPriorityStateAppliers
    -Collection<ClusterStateApplier> lowPriorityStateAppliers
    -AtomicReference<ClusterState> state
    -NodeConnectionsService nodeConnectionsService
    -OperationRouting operationRouting
}

class ClusterSettings{
    // 封装了所有Cluster级别的设置
    ---

}

interface ClusterStateApplier{
    ---
    // 当接收到一个新的集群状态时
    // 应用此方法来修改本地的集群状态
    +void applyClusterState(ClusterChangedEvent event)
}

class ClusterState implements Diffable{
    // 集群状态。 不可变对象。
    // 只能通过master来进行更新，所有更新操作由单个线程顺序执行
    // 每次更新完毕后。由Discovery.publish方法通知其他结点。
    // 实现Diffable接口，可以只发送增量
    ---
    -String stateUUID // 增量更新时需比较的版本id
    -ClusterName clusterName
    -RoutingTable routingTable
    -DiscoveryNodes nodes
    -MetaData metaData
    -ClusterBlocks blocks
}

class MetaData{
    集群元数据。
    详见cluster.metadata包
}

class RoutingTable{
    // 每一个索引中的每一个分片，处在哪一个节点上
    // 见elasticsearch.cluster.routing包
}

class DiscoveryNodes{
    // 集群中所有的节点
    // 见elasticsearch.cluster.node包
}

class ClusterBlocks{
    // 表示集群级别的阻塞，用来阻止对集群的脏操作
    // 见elasticsearch.cluster.block包
}

class NodeConnectionsService{
    // 负责连接到其他节点（当节点加入集群时）
    // 或者断开到其他节点的连接（当节点从集群被移除时）
    // 内部依赖org.elasticsearch.transport.TransportService来实现功能
    ---
    +void connectToNodes(DiscoveryNodes discoveryNodes)
    +void disconnectFromNodesExcept(DiscoveryNodes nodesToKeep)
}

class OperationRouting{
    // 路由操作
    ---
    // 用get 获取文档时的路由函数，指定了id 和 routing值
    +ShardIterator getShards(ClusterState clusterState, String index, String id, @Nullable String routing, @Nullable String preference)
    // 用get 获取文档时的路由函数， 指定了shardId
    +ShardIterator getShards(ClusterState clusterState, String index, int shardId, @Nullable String preference)
    // 写入文档时的路由函数
    +ShardIterator indexShards(ClusterState clusterState, String index, String id, @Nullable String routing)
    // search查询时的路由函数
    +GroupShardsIterator<ShardIterator> searchShards(ClusterState clusterState, String[] concreteIndices, @Nullable Map<String, Set<String>> routing, @Nullable String preference)
    +ShardId shardId(ClusterState clusterState, String index, String id, @Nullable String routing)
}

ClusterService *-- ClusterSettings

ClusterService *- DiscoverySettings

ClusterService *---- OperationRouting

ClusterService "1" *-- "n" ClusterStateApplier

ClusterService *-- ClusterState

ClusterService *-- NodeConnectionsService

ClusterState *-- RoutingTable

ClusterState *-- DiscoveryNodes

ClusterState *-- MetaData

ClusterState *-- ClusterBlocks



@enduml