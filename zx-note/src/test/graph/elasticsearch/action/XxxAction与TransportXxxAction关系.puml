@startuml
Note as N1
org.elasticsearch.action.Action表示一个Elasticsearch可以执行的命令/动作
Action的三个泛型参数：
ActionRequest封装了命令的所有请求参数
ActionResponse封装了命令的所有响应信息
ActionRequestBuilder用来构造ActionRequest

每个Action都是一个单例对象，只用来构造RequestBuilder和Response，
每个Action都分配一个唯一的名称，例如"indices:data/read/explain"
用该名称来绑定到对应的TransportAction

XxxAction主要定义Action的名称及RequestBuilder,Response类型
TransportXxxAction定义对此Action的具体处理
对应的还有RestXxxAction，负责绑定对应的REST URL，并预处理请求参数。
end note

abstract class GenericAction<Request, Response>{
    // 每类Action都有一个唯一的名称
    -String name
    // 构造一个Response实例
    +{abstract} Response newResponse()

}

abstract class Action<ActionRequest, ActionResponse, ActionRequestBuilderer> extends GenericAction{
    // 构造一个RequestBuilder实例
    +{abstract} RequestBuilder newRequestBuilder(ElasticsearchClient client)
}

class ExplainAction extends Action

class GetAction extends Action

class XxxAction extends Action

class ActionModule {
    --
    // 将XxxAction和TransportXxxAction关联起来
    {static}setupActions(...)
}

abstract class TransportAction<ActionRequest, ActionResponse>{
    --
    +Task execute(Request request, ActionListener<ActionResponse> listener)
    // 留给子类定义具体的处理流程
    #{abstract} void doExecute(Request request, ActionListener<ActionResponse> listener)
}

class TransportExplainAction extends TransportAction
class TransportGetAction extends TransportAction
class TransportXxxAction extends TransportAction


Action -right-- ActionModule
ActionModule -right-- TransportAction

@enduml